/* Fonts */

@font-face {
  font-family: 'Outfit';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url('/fonts/Outfit.woff2') format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,
    U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191,
    U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: 'Noto Kufi Arabic';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url('/fonts/NotoKufiArabic.woff2') format('woff2');
  unicode-range: U+0600-06FF, U+0750-077F, U+0870-088E, U+0890-0891, U+0898-08E1,
    U+08E3-08FF, U+200C-200E, U+2010-2011, U+204F, U+2E41, U+FB50-FDFF,
    U+FE70-FE74, U+FE76-FEFC, U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC,
    U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC,
    U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: 'Outfit fallback';
  src: local('Arial');
  size-adjust: 99.4549%;
  ascent-override: 100.5481%;
  descent-override: 26.1425%;
  line-gap-override: 0%;
}

@font-face {
  font-family: 'Noto Kufi Arabic fallback';
  src: local('Arial');
  size-adjust: 125.2814%;
  ascent-override: 102.3296%;
  descent-override: 49.0895%;
  line-gap-override: 0%;
}

/* Variables */

:root {
  --blue: #50c8f0;
  --night: #28285a;
  --duration: 0.24s;
  --transition: var(--duration) linear;
  --animation: calc(var(--duration) * 2) forwards;
  --padding-x: 16px;
  --padding-y: 16px;
  --h-header: 72px;

  &.theme-light {
    --background: #fff;
    --background-secondary: #f9fafb;
    --color: #111827;
    --color-secondary: rgba(17 24 39 / 73%);
    --shadow: 0 0 0 / 10%;

    color-scheme: light;
  }

  &.theme-dark {
    --background: #111827;
    --background-secondary: #1f2937;
    --color: #fff;
    --color-secondary: rgba(255 255 255 / 67%);
    --shadow: 255 255 255 / 10%;

    color-scheme: dark;
  }

  &[dir='ltr'] {
    --font-family: 'Outfit', 'Outfit fallback';
    --origin: 0%;
  }

  &[dir='rtl'] {
    --font-family: 'Noto Kufi Arabic', 'Noto Kufi Arabic fallback';
    --origin: 100%;
  }

  @media (min-width: $md) {
    --padding-x: 24px;
    --padding-y: 24px;

    &:not(.scrolled) {
      --h-header: 88px;
    }
  }

  @media (min-width: $lg) {
    --padding-x: calc(50% - 952px / 2);
    --padding-y: 32px;
  }

  @media (min-width: $xl) {
    --padding-x: calc(50% - 1200px / 2);
  }
}

/* Reset */

*,
*::before,
*::after {
  box-sizing: border-box;
}

::selection {
  color: var(--night);
  background-color: var(--blue);
}

/* Typography */

html {
  text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--background);
  color: var(--color);
  transition: background-color var(--transition), color var(--transition);
  font-family: var(--font-family);

  @include font(16, $height: 1.5);

  .menu-open & {
    height: 100%;
    overflow: hidden;
  }
}

h1,
.h1 {
  @include font(44, 700, $spacing: -0.04em, $margin: 0 24px);

  @media (min-width: $md) {
    @include font(56, $margin: 0 36px);
  }

  @media (min-width: $lg) {
    @include font(80, $margin: 0 48px);
  }
}

h2,
.h2 {
  @include font(32, 500, $spacing: -0.04em, $margin: 0 24px);

  @media (min-width: $md) {
    @include font(42);
  }

  @media (min-width: $lg) {
    @include font(56);
  }
}

h3,
.h3 {
  @include font(20, 500, $spacing: -0.02em, $margin: 0 12px);
}

h6,
.h6 {
  @include font(16, 500, $height: 1.5, $margin: 0);
}

a {
  color: var(--color);
  text-decoration: none;
  transition: color var(--transition);
}

p {
  margin-block: 0 12px;

  &:last-child {
    margin-block-end: 0;
  }
}

ul,
ol {
  margin: 0;
  padding: 0;
  list-style: none;
}

button {
  font-family: inherit;
  font-size: inherit;
  border: none;
  cursor: pointer;
}

strong {
  font-weight: 600;
}

address {
  font-style: normal;
}

picture {
  display: grid;
  background-color: var(--background-secondary);
  transition: background-color var(--transition);
}

img {
  width: 100%;
  height: auto;
  opacity: 0;
  transition: opacity var(--transition);

  &.loaded {
    opacity: 1;
  }
}

/* Layout */

.container {
  padding: calc(var(--padding-y) * 3) var(--padding-x);

  &-no-pt {
    padding-top: 0;
  }
}

.hero {
  display: grid;
  grid-auto-rows: 1fr auto;
  padding-block: 0;
  transition: min-height var(--transition);
  min-height: calc(100vh - var(--h-header));

  a {
    display: grid;
    justify-self: center;
    margin-bottom: 24px;
  }
}

.intro {
  @include grid(12, 1fr, $align: center);

  &-justify {
    max-width: 348px;
    margin: auto;

    @media (min-width: $md) {
      max-width: 100%;
    }
  }

  * {
    grid-column: 1 / 13;

    @media (min-width: $md) {
      grid-column: 1 / 10;
    }

    @media (min-width: $xl) {
      grid-column: 1 / 8;
    }
  }

  &-end * {
    @media (min-width: $md) {
      grid-column: 7 / 12;
    }
  }
}

.row {
  @include grid(12, 1fr, $gap: 24px 0);

  &-evenly {
    justify-content: space-evenly;
    grid-template-columns: repeat(3, auto);
  }

  &-center {
    align-items: center;
  }
}

.col {
  grid-column: 1 / 13;

  @media (min-width: $md) {
    @include col(1, 6);
    @include col(3, 6, $order: -1);
    @include col(7, 10);
    @include col(7, 12);
  }

  @media (min-width: $lg) {
    @include col(1, 3);
    @include col(1, 4);
    @include col(4, 6);
    @include col(5, 13);
    @include col(7, 9);
    @include col(10, 12);
    @include col(auto, auto);
  }
}

.error {
  display: grid;
  justify-items: center;
  align-content: center;
  min-height: calc(100vh);
  transform: translateY(0);
}

/* Header */

header {
  --padding-y: 24px;

  position: fixed;
  width: 100%;
  padding: var(--padding-y) var(--padding-x);
  background-color: var(--background);
  transition: background-color var(--transition), padding var(--transition);
  z-index: 1;

  @include grid(2, auto, $justify: space-between);

  .scrolled & {
    box-shadow: 0 0 10px rgba(var(--shadow));
  }

  @media (min-width: $md) {
    grid-template-columns: repeat(3, auto);

    html:not(.scrolled) & {
      --padding-y: 32px;
    }
  }
}

.skip {
  position: absolute;
  inset-block-start: 4px;
  inset-inline-start: 4px;
  background-color: var(--blue);
  color: var(--night);
  padding: 4px 8px;
  transform: translateY(calc(-100% - 8px));
  transition: transform var(--transition);

  &:focus {
    transform: translateY(0);
  }
}

.logo {
  display: grid;
  overflow: hidden;
  width: 24px;
  visibility: visible;
  opacity: 1;
  transition-property: visibility, opacity;

  .menu-open & {
    visibility: hidden;
    opacity: 0;
  }

  .menu-closing & {
    transition-delay: var(--duration);
  }

  @media (min-width: $xs) {
    width: auto;
  }

  path {
    transition: fill var(--transition);
  }
}

.nav {
  position: fixed;
  inset: 0;
  width: 100%;
  height: var(--h-header);
  visibility: hidden;
  opacity: 0;
  background-color: transparent;

  .menu-open &,
  .menu-closing & {
    transition-property: height, visibility, opacity, background-color;
    transition-duration: var(--duration);
  }

  .menu-open & {
    height: 100%;
    visibility: visible;
    opacity: 1;
    background-color: var(--background-secondary);
    overflow-y: auto;
    transition-timing-function: cubic-bezier(0.55, 0.09, 0.68, 0.53);
  }

  .menu-closing & {
    transition-delay: var(--duration);
    transition-timing-function: cubic-bezier(0.46, 0.03, 0.52, 0.96);
  }

  @media (min-width: $md) {
    position: relative;
    height: auto;
    visibility: visible;
    opacity: 1;
  }
}

.menu {
  display: grid;
  gap: 24px;
  padding: 10%;
  visibility: hidden;

  @media (min-width: $md) {
    grid-template-columns: repeat(var(--item-total), auto);
    padding: 0;
  }

  a {
    position: relative;
    display: grid;
    width: fit-content;
    font-size: 28px;
    font-weight: 500;
    visibility: hidden;
    opacity: 0;
    transform: translateY(-8px);

    .menu-open &,
    .menu-closing & {
      transition-property: visibility, opacity, transform;
    }

    .menu-open & {
      visibility: visible;
      opacity: 1;
      transform: translateY(0);
      transition-delay: calc(var(--duration) + var(--item-number) * 20ms);
      transition-timing-function: cubic-bezier(0.55, 0.09, 0.68, 0.53);
    }

    .menu-closing & {
      transition-delay: calc(
        -20ms + 20ms * calc(var(--item-total) - var(--item-number))
      );
      transition-timing-function: cubic-bezier(0.46, 0.03, 0.52, 0.96);
    }

    @media (min-width: $md) {
      font-size: 16px;
      visibility: visible;
      opacity: 1;
      transform: none;
    }

    &::after {
      content: '';
      position: absolute;
      bottom: -2px;
      background-color: var(--blue);
      width: 30%;
      height: 4px;
      border-radius: 2rem;
      transform: scaleX(0);
      transform-origin: var(--origin);
      transition: transform var(--transition);

      @media (min-width: $md) {
        height: 3px;
      }
    }

    &.active::after {
      transform: scaleX(1);
    }
  }
}

.switchers {
  position: relative;
  display: flex;
  align-items: center;
  column-gap: 16px;

  > * {
    background-color: transparent;
    color: currentcolor;
    transition: color var(--transition);
    width: 20px;
    height: 20px;
    margin: 0;
    padding: 0;
  }

  .toggle-lang,
  .toggle-theme {
    visibility: visible;
    opacity: 1;
    transition-property: visibility, opacity;

    .menu-open & {
      visibility: hidden;
      opacity: 0;
    }

    .menu-closing & {
      transition-delay: var(--duration);
    }
  }
}

.lang-tooltip {
  position: absolute;
  inset-inline-end: calc(100% + 8px);
  width: max-content;
  font-size: 13px;
  line-height: 24px;
  opacity: 0;
  visibility: hidden;

  @keyframes lang-tooltip {
    0% {
      opacity: 0;
      transform: translateX(20%);
    }

    30%,
    70% {
      opacity: 1;
      transform: translateX(0);
    }

    100% {
      opacity: 0;
      transform: translateX(-20%);
    }
  }

  @media (min-width: $lg) {
    &.active {
      visibility: visible;
      animation: lang-tooltip 2s ease-in-out;

      [dir='rtl'] & {
        animation-direction: reverse;
      }
    }
  }
}

.toggle-theme {
  &-enter-active,
  &-leave-active {
    transition-property: transform, opacity;
    transition-duration: calc(var(--duration) / 2);
  }

  &-enter-from,
  &-leave-to {
    transform: scaleY(0);
    opacity: 0;
  }
}

.toggle-menu {
  display: grid;
  align-content: space-between;
  padding: 2px;

  @media (min-width: $md) {
    display: none;
  }

  span {
    background-color: currentcolor;
    height: 2px;
    border-radius: 2em;
  }

  @keyframes toggle-top {
    0% {
      transform: translateY(7px) scaleX(1) rotate(-45deg);
    }

    25% {
      transform: translateY(7px) scaleX(1) rotate(0);
    }

    50% {
      transform: translateY(0) scaleX(1) rotate(0);
    }
  }

  @keyframes toggle-top-scale {
    50% {
      transform: translateY(0) scaleX(1) rotate(0);
    }

    75% {
      transform: translateY(7px) scaleX(1) rotate(0);
    }

    100% {
      transform: translateY(7px) scaleX(1) rotate(-45deg);
    }
  }

  .top {
    animation: toggle-top var(--animation);

    .menu-open & {
      animation: toggle-top-scale var(--animation);
    }
  }

  @keyframes toggle-middle {
    0%,
    75% {
      transform: scaleX(0);
    }

    100% {
      transform: scaleX(0.5);
    }
  }

  @keyframes toggle-middle-scale {
    0% {
      transform: scaleX(0.5);
    }

    25%,
    100% {
      transform: scaleX(0);
    }
  }

  .middle {
    animation: toggle-middle var(--animation);
    transform-origin: var(--origin);

    .menu-open & {
      animation: toggle-middle-scale var(--animation);
    }
  }

  @keyframes toggle-bottom {
    0% {
      transform: translateY(-7px) scaleX(1) rotate(45deg);
    }

    25% {
      transform: translateY(-7px) scaleX(1) rotate(0);
    }

    50% {
      transform: translateY(0) scaleX(1) rotate(0);
    }

    75%,
    100% {
      transform: translateY(0) scaleX(0.75) rotate(0);
      transform-origin: var(--origin);
    }
  }

  @keyframes toggle-bottom-scale {
    0%,
    25% {
      transform: translateY(0) scaleX(0.75) rotate(0);
      transform-origin: var(--origin);
    }

    50% {
      transform: translateY(0) scaleX(1) rotate(0);
    }

    75% {
      transform: translateY(-7px) scaleX(1) rotate(0);
    }

    100% {
      transform: translateY(-7px) scaleX(1) rotate(45deg);
    }
  }

  .bottom {
    animation: toggle-bottom var(--animation);

    .menu-open & {
      animation: toggle-bottom-scale var(--animation);
    }
  }
}

/* Main */

main {
  transform: translateY(var(--h-header));
  transition: transform var(--transition);

  &:is(.page-enter-active, .page-leave-active) {
    transition-property: opacity;
  }

  &:is(.page-enter-from, .page-leave-to) {
    opacity: 0;
  }
}

/* Footer */

footer {
  --padding-y: 48px;

  font-weight: 300;
  padding: var(--padding-y) var(--padding-x);
  display: grid;
  justify-content: center;
  gap: var(--padding-y);
  transform: translateY(var(--h-header));
  transition: transform var(--transition);

  @media (min-width: $lg) {
    --padding-y: 144px;

    grid-template-columns: repeat(3, auto);
    justify-content: space-between;
  }

  a:hover {
    color: var(--blue);
  }
}

.socials {
  margin-top: 12px;
  max-width: 200px;

  @include grid(4, auto, $justify: space-between);

  @media (min-width: $md) {
    max-width: 280px;
  }

  a {
    display: grid;
  }
}

.copy {
  @include font(12.8, $height: 1.875);
}

/* Components */

.lead {
  @include font(20, 500, $spacing: -0.02em);

  color: var(--color-secondary);
  transition: color var(--transition);

  footer & {
    font-weight: 300;
    color: var(--color);
    margin: 0;
    max-width: 400px;
  }
}

.tag {
  display: inline-block;
  margin-inline-end: 12px;

  &-bold {
    color: var(--color-secondary);
    font-weight: 500;
    transition: color var(--transition);
  }

  &:last-child {
    margin-inline-end: 0;
  }

  &::before {
    content: '#';
    color: var(--blue);
    margin-inline-end: 3px;
  }
}

.card-group {
  @include grid(1, minmax(auto, 348px), var(--padding-y), $justify: center);

  @media (min-width: $md) {
    grid-template-columns: repeat(2, minmax(348px, 460px));
  }

  @media (min-width: $xl) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.card {
  display: grid;
  position: relative;
  overflow: hidden;
  z-index: 1;
  border-radius: var(--padding-y);

  img {
    aspect-ratio: 49 / 52;
  }

  .overlay {
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      0deg,
      rgba(0 0 0 / 0%) 0%,
      rgba(0 0 0 / 0%) 60%,
      rgba(0 0 0 / 60%) 100%
    );
    transition: opacity var(--transition);
  }

  .inner {
    display: grid;
    grid-auto-rows: auto 1fr;
    position: absolute;
    height: 100%;
    color: #fff;
    padding: var(--padding-y);
  }

  .tag::before {
    color: #fff;
  }

  h2,
  h3 {
    @include font(32);

    &.work {
      @media (min-width: $xl) {
        @include font(56);
      }
    }
  }

  .lead {
    color: #fff;
    align-self: end;
    transform: translateY(calc(100% + 48px));
    transition: transform var(--transition);
    visibility: hidden;

    @media (min-width: $md) {
      visibility: visible;
    }
  }

  &:hover {
    .overlay {
      background: linear-gradient(
        0deg,
        rgba(0 0 0 / 100%) 0%,
        rgba(0 0 0 / 60%) 50%,
        rgba(0 0 0 / 100%) 100%
      );
      opacity: 0.8;
    }

    .lead {
      transform: translateY(0);
    }
  }
}

.link {
  display: inline-block;

  @include font(20, 500);

  @media (min-width: $md) {
    @include font(28, $height: 1.286);
  }

  &.outfit {
    font-family: 'Outfit', 'Outfit fallback';
  }

  &:hover {
    color: var(--blue);
  }

  &.move:hover {
    color: currentcolor;
  }
}

.more {
  display: grid;
  padding-top: var(--padding-y);
}

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  column-gap: 12px;
  background-color: var(--background-secondary);
  font-weight: 500;
  line-height: 46px;
  padding-inline: 20px 10px;
  border-radius: 2em;
  transition: background-color var(--transition), color var(--transition),
    font-weight var(--transition);

  .more & {
    justify-self: end;
  }

  .error & {
    margin-top: 96px;
  }

  &:hover {
    background-color: var(--blue);
    color: var(--night);
    font-weight: 600;
  }

  &:focus {
    outline: 2px solid var(--blue);
    outline-offset: 3px;
  }

  svg {
    background-color: var(--blue);
    color: var(--background-secondary);
    border-radius: 2rem;
    padding: 10px;
    width: 32px;
    height: 32px;
    transition: color var(--transition), transform var(--transition);

    [dir='rtl'] & {
      transform: rotate(180deg);
    }
  }

  &:hover svg {
    color: var(--night);
    transform: translateX(5px);

    [dir='rtl'] & {
      transform: translateX(-5px) rotate(180deg);
    }
  }
}

.move {
  position: relative;
  display: inline-block;

  &::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: -2px;
    height: 3px;
    background-color: var(--blue);
    transform: scaleX(0.05);
    transform-origin: var(--origin);
    transition: transform var(--transition);
  }

  @keyframes move {
    0% {
      transform: scaleX(0.05);
    }

    25% {
      transform: scaleX(1);
      transform-origin: var(--origin);
    }

    26% {
      transform: scaleX(1);
      transform-origin: calc(100% - var(--origin));
    }

    60% {
      transform: scaleX(0.05);
    }

    80% {
      transform: scaleX(0);
      transform-origin: calc(100% - var(--origin));
    }

    81% {
      transform: scaleX(0);
      transform-origin: var(--origin);
    }

    100% {
      transform: scaleX(0.05);
    }
  }

  &:hover::before {
    animation: move var(--animation);
  }
}

.back {
  width: max-content;
  text-transform: uppercase;

  @include font(12.8, 500, $height: 1.875, $margin: 0 12px);

  &:hover {
    color: var(--blue);
  }

  svg {
    margin-inline-end: 6px;

    [dir='rtl'] & {
      transform: rotate(-180deg);
    }
  }
}

.post-nav {
  display: grid;
  padding-block: 72px 48px;
  justify-content: space-between;
  background-color: var(--background-secondary);
  transition: background-color var(--transition);

  .next,
  .prev {
    position: relative;
    padding-inline: 18px 12px;

    &:hover {
      color: var(--blue);
    }

    &::before {
      content: attr(data-text);
      position: absolute;
      color: var(--color-secondary);
      transition-property: color var(--transition);
      inset-block-start: -12px;
      inset-inline-start: 20px;
      font-size: 0.8rem;
      line-height: 0.9375;
      pointer-events: none;
    }

    &:not(.prev) {
      grid-column: 2;
      text-align: end;
      padding-inline: 12px 18px;

      &::before {
        inset-inline: 0 18px;
      }
    }
  }

  svg {
    position: absolute;
    top: 45%;

    [dir='rtl'] & {
      transform: rotate(180deg);
    }
  }

  .prev svg {
    inset-inline-start: -3px;
  }

  .next svg {
    inset-inline-end: -3px;
  }
}

.request {
  background-color: var(--background-secondary);
  transition: background-color var(--transition);
  text-align: center;

  .h3 {
    color: var(--color-secondary);
    transition: color var(--transition);
  }

  a {
    margin: 0;
  }
}

.method {
  counter-reset: method;

  li::before {
    @include font(56, 900);

    counter-increment: method;
    content: counters(method, '-');
    color: var(--blue);
  }
}

#map {
  width: 100%;
  height: 720px;
  background-color: var(--background-secondary);
  transition: background-color var(--transition);
}

.other {
  background-color: var(--background-secondary);
}

.work {
  h1 {
    margin-block-end: 0;
  }

  .banner {
    overflow: hidden;
    justify-items: center;
    padding: var(--padding-y) var(--padding-y) 0;

    @media (min-width: $lg) {
      --padding-y: 48px;
    }

    img {
      aspect-ratio: 2 / 1;
      max-width: $xl;
      border-radius: 0.5rem 0.5rem 0 0;
    }
  }

  @media (min-width: $md) {
    .inner {
      position: sticky;
      top: var(--padding-y);
    }
  }

  .lead {
    margin-bottom: 16px;
  }

  .preview {
    aspect-ratio: 1 / 1;
    padding: var(--padding-y);
    overflow-y: scroll;

    img {
      border-radius: 0.25rem;
    }

    &::-webkit-scrollbar {
      width: 6px;

      &-thumb {
        background-color: var(--blue);
      }

      &-track {
        background-color: var(--color-secondary);
      }
    }
  }

  img {
    box-shadow: 0 0 40px 0 rgba(var(--shadow));
  }
}

.blog {
  h1 {
    margin-block-end: 24px;
  }

  .meta {
    font-weight: 500;
    color: var(--color-secondary);
    transition: color var(--transition);

    @media (min-width: $md) {
      ul {
        position: relative;
        display: inline-flex;
        margin-inline-start: 12px;
        padding-inline-start: 12px;

        &::before {
          content: '';
          position: absolute;
          inset-inline-start: 0;
          top: 50%;
          width: 1px;
          height: 10px;
          margin-top: -5px;
          background-color: var(--color-secondary);
          opacity: 0.2;
        }
      }
    }
  }

  .banner {
    max-width: 1200px;
    margin: 0 auto;

    img {
      object-fit: cover;
      aspect-ratio: 2 / 1;
    }
  }

  .container-content {
    display: grid;
    grid-template-columns: repeat(12, 1fr);

    * {
      grid-column: 1 / 13;

      @media (min-width: $lg) {
        grid-column: 2 / 12;
      }

      @media (min-width: $xl) {
        grid-column: 3 / 11;
      }
    }

    p {
      color: var(--color-secondary);
      transition: color var(--transition);

      &.lead {
        line-height: 1.6;
        letter-spacing: normal;
      }
    }

    h2 {
      @include font(28, 600, $spacing: -0.03em, $margin: 36px 12px);
    }

    h3 {
      @include font(20, 600, $spacing: 0, $margin: 24px 12px);
    }

    a[rel='nofollow'] {
      text-decoration: underline;

      &:hover {
        color: var(--blue);
      }
    }

    ul,
    ol {
      color: var(--color-secondary);
      transition: color var(--transition);
      margin-block: 0 12px;

      &:is(ol) {
        counter-reset: ol;
      }

      li {
        padding-inline-start: 1rem;
        margin-bottom: 6px;

        &:is(ol li) {
          padding-inline-start: 1.3rem;
        }

        &:last-child {
          margin-bottom: 0;
        }

        &::before {
          content: '\002022';
          margin-inline-start: -0.875rem;
          float: inline-start;

          &:is(ol li) {
            counter-increment: ol;
            content: counters(ol, '.') '.';
            margin-inline-start: -1.2rem;
          }
        }
      }
    }
  }

  .share {
    display: flex;
    justify-content: space-between;
    padding-block: 24px;
    border-block: 1px solid var(--background-secondary);
    transition: border-color var(--transition);
    grid-column: 1 / 13;

    @media (min-width: $lg) {
      grid-column: 2 / 12;
    }

    @media (min-width: $xl) {
      grid-column: 3 / 11;
    }

    h2 {
      margin-bottom: 0;
    }

    ul {
      display: flex;
      column-gap: 24px;
      height: 24px;
    }

    button {
      background: transparent;
      color: currentcolor;
      margin: 0;
      padding: 0;
    }

    a:hover,
    button:hover {
      transition: color var(--transition);
      color: var(--blue);
    }

    .tooltip {
      position: relative;

      &-text {
        font-size: 12px;
        line-height: 22px;
        width: max-content;
        color: #00d282;
        border: 1px solid currentcolor;
        padding: 0 6px;
        border-radius: 2em;
        position: absolute;
        inset-inline-end: 34px;
        z-index: 1;

        &-enter-active,
        &-leave-active {
          transition: opacity var(--transition);
        }

        &-enter-from,
        &-leave-to {
          opacity: 0;
        }
      }
    }
  }
}
